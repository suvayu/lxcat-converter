stages:
  - build
  - publish

build-binaries:
  stage: build
  parallel:
    matrix:
      - IMAGE: node:lts-bullseye
        TARGET: x86_64-unknown-linux-gnu
        PLATFORM: linux-x64-gnu
      # - IMAGE: node:lts-alpine
      #   TARGET: x86_64-unknown-linux-musl
      #   PLATFORM: linux-x64-musl
  image: $IMAGE
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - .npm/
      - .cargo/
  script:
    - '[ -f /etc/alpine-release ] && apk --no-cache add libc6-compat curl gcc'
    - curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y
    - source "$HOME/.cargo/env"
    - rustc --version
    - npm ci --cache .npm --prefer-offline
    - npm run build -- --target $TARGET
    - mv @suvayu/converter.$PLATFORM.node npm/$PLATFORM/
  artifacts:
    paths:
      - npm/$PLATFORM

publish:
  stage: publish
  image: node:lts-bullseye
  dependencies:
    - "build-binaries: [node:lts-bullseye, x86_64-unknown-linux-gnu, linux-x64-gnu]"
    # - "build-binaries: [node:lts-alpine, x86_64-unknown-linux-musl, linux-x64-musl]"
  rules:
    - if: $CI_GIT_COMMIT_TAG
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPMJS_TOKEN" >> ~/.npmrc
    - |
      for p in linux-x64-{gnu,musl};
      do
          pushd npm/$p && {
                npm publish --tag testing --access public
                popd
            }
      done
    - npm publish --tag testing --access public
